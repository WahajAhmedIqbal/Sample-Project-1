{"ast":null,"code":"var _jsxFileName = \"/home/probook/sample-Project-1/src/components/formValidation/index.js\";\nimport React from \"react\";\nimport \"./index.css\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\"; // const layout = {\n//   labelCol: {\n//     span: 8,\n//   },\n//   wrapperCol: {\n//     span: 16,\n//   },\n// };\n// const tailLayout = {\n//   wrapperCol: {\n//     offset: 8,\n//     span: 16,\n//   },\n// };\n// const schema = yup.object().shape({\n//   Name: yup.string().required(\"First Name should be required please\"),\n//   email: yup.string().email().required(),\n//   password: yup.string().min(4).max(15).required(),\n// });\n// function FormValidation() {\n//   const { register, handleSubmit, errors } = useForm({\n//     resolver: yupResolver(schema),\n//   });\n//   const submitForm = (data) => {\n//     console.log(data);\n//   };\n//   return (\n//     <div className=\"Form\">\n//       <div className=\"title\">Form Validation</div>\n//       <div className=\"inputs\">\n//         <Form {...layout} onSubmit={handleSubmit(submitForm)}>\n//           <Form.Item\n//             {...tailLayout}\n//             type=\"text\"\n//             name=\"Name\"\n//             ref={register}\n//             placeholder=\"First Name...\"\n//           >\n//             <Input />\n//           </Form.Item>\n//           <p> {errors.Name?.message} </p>\n//           <Form.Item\n//             {...tailLayout}\n//             type=\"text\"\n//             name=\"email\"\n//             placeholder=\"Email...\"\n//             ref={register}\n//           >\n//             <Input />\n//           </Form.Item>\n//           <p> {errors.email?.message} </p>\n//           <Form.Item\n//             {...tailLayout}\n//             type=\"password\"\n//             name=\"password\"\n//             placeholder=\"Password...\"\n//             ref={register}\n//           >\n//             <Input />\n//           </Form.Item>\n//           <p> {errors.password?.message} </p>\n//           <Button type=\"primary\" htmlType=\"submit\">\n//             Submit\n//           </Button>\n//         </Form>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nconst FormValidation = () => {\n  const onFinish = values => {\n    console.log(\"Success:\", values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...layout,\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Username\",\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: \"Please input your username!\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Password\",\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: \"Please input your password!\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n      name: \"remember\",\n      valuePropName: \"checked\",\n      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n        children: \"Remember me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FormValidation;\nexport default FormValidation;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormValidation\");","map":{"version":3,"sources":["/home/probook/sample-Project-1/src/components/formValidation/index.js"],"names":["React","Form","Input","Button","Checkbox","useForm","yupResolver","yup","layout","labelCol","span","wrapperCol","tailLayout","offset","FormValidation","onFinish","values","console","log","onFinishFailed","errorInfo","remember","required","message"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./index.css\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\n// const layout = {\n//   labelCol: {\n//     span: 8,\n//   },\n//   wrapperCol: {\n//     span: 16,\n//   },\n// };\n// const tailLayout = {\n//   wrapperCol: {\n//     offset: 8,\n//     span: 16,\n//   },\n// };\n\n// const schema = yup.object().shape({\n//   Name: yup.string().required(\"First Name should be required please\"),\n\n//   email: yup.string().email().required(),\n\n//   password: yup.string().min(4).max(15).required(),\n// });\n\n// function FormValidation() {\n//   const { register, handleSubmit, errors } = useForm({\n//     resolver: yupResolver(schema),\n//   });\n\n//   const submitForm = (data) => {\n//     console.log(data);\n//   };\n//   return (\n//     <div className=\"Form\">\n//       <div className=\"title\">Form Validation</div>\n//       <div className=\"inputs\">\n//         <Form {...layout} onSubmit={handleSubmit(submitForm)}>\n//           <Form.Item\n//             {...tailLayout}\n//             type=\"text\"\n//             name=\"Name\"\n//             ref={register}\n//             placeholder=\"First Name...\"\n//           >\n//             <Input />\n//           </Form.Item>\n//           <p> {errors.Name?.message} </p>\n\n//           <Form.Item\n//             {...tailLayout}\n//             type=\"text\"\n//             name=\"email\"\n//             placeholder=\"Email...\"\n//             ref={register}\n//           >\n//             <Input />\n//           </Form.Item>\n//           <p> {errors.email?.message} </p>\n//           <Form.Item\n//             {...tailLayout}\n//             type=\"password\"\n//             name=\"password\"\n//             placeholder=\"Password...\"\n//             ref={register}\n//           >\n//             <Input />\n//           </Form.Item>\n//           <p> {errors.password?.message} </p>\n\n//           <Button type=\"primary\" htmlType=\"submit\">\n//             Submit\n//           </Button>\n//         </Form>\n//       </div>\n//     </div>\n//   );\n// }\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst FormValidation = () => {\n  const onFinish = (values) => {\n    console.log(\"Success:\", values);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{\n        remember: true,\n      }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your username!\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your password!\",\n          },\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n        <Checkbox>Remember me</Checkbox>\n      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default FormValidation;\n"]},"metadata":{},"sourceType":"module"}