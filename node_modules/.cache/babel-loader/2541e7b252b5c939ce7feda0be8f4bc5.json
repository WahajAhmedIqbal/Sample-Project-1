{"ast":null,"code":"var _jsxFileName = \"/home/probook/sample-Project-1/src/components/formValidation/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./index.css\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\nconst schema = yup.object().shape({\n  Name: yup.string().required(\"First Name should be required please\"),\n  email: yup.string().email().required(),\n  password: yup.string().min(4).max(15).required()\n});\n\nfunction FormValidation() {\n  _s();\n\n  var _errors$Name, _errors$email, _errors$password;\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const submitForm = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Form Validation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(submitForm),\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n          type: \"text\",\n          name: \"Name\",\n          ref: register,\n          placeholder: \"First Name...\",\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", (_errors$Name = errors.Name) === null || _errors$Name === void 0 ? void 0 : _errors$Name.message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"Email...\",\n          ref: register,\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password...\",\n          ref: register,\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormValidation, \"iyH731LTjAbxnbpM16EGorBPneQ=\", false, function () {\n  return [useForm];\n});\n\n_c = FormValidation;\nexport default FormValidation;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormValidation\");","map":{"version":3,"sources":["/home/probook/sample-Project-1/src/components/formValidation/index.js"],"names":["React","Form","Input","Button","Checkbox","useForm","yupResolver","yup","layout","labelCol","span","wrapperCol","tailLayout","offset","schema","object","shape","Name","string","required","email","password","min","max","FormValidation","register","handleSubmit","errors","resolver","submitForm","data","console","log","message"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./index.css\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst schema = yup.object().shape({\n  Name: yup.string().required(\"First Name should be required please\"),\n\n  email: yup.string().email().required(),\n\n  password: yup.string().min(4).max(15).required(),\n});\n\nfunction FormValidation() {\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const submitForm = (data) => {\n    console.log(data);\n  };\n  return (\n    <div className=\"Form\">\n      <div className=\"title\">Form Validation</div>\n      <div className=\"inputs\">\n        <form onSubmit={handleSubmit(submitForm)}>\n          <Form.Item\n            {...tailLayout}\n            type=\"text\"\n            name=\"Name\"\n            ref={register}\n            placeholder=\"First Name...\"\n          >\n            <Input />\n          </Form.Item>\n          <p> {errors.Name?.message} </p>\n\n          <Form.Item\n            {...tailLayout}\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"Email...\"\n            ref={register}\n          >\n            <Input />\n          </Form.Item>\n          <p> {errors.email?.message} </p>\n          <Form.Item\n            {...tailLayout}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password...\"\n            ref={register}\n          >\n            <Input />\n          </Form.Item>\n          <p> {errors.password?.message} </p>\n\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default FormValidation;\n"]},"metadata":{},"sourceType":"module"}