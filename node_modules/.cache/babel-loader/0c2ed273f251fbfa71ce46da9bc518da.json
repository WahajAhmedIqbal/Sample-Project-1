{"ast":null,"code":"var _jsxFileName = \"/home/probook/sample-Project-1/src/components/formValidation/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from \"react\";\nimport { Formik, Field } from \"formik\";\nimport * as yup from \"yup\";\nimport s from \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  email: \"\",\n  name: \"\",\n  password: \"\"\n};\nconst userSchema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().email().required(),\n  password: yup.string().required().max(13).min(8)\n});\n\nconst FormValidation = props => {\n  _s();\n\n  const [user, setUser] = useState(intialState);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: `${s.output}`,\n      children: JSON.stringify(user, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: user,\n      onSubmit: (values, actions) => {\n        actions.setSubmitting(true);\n        setUser(values);\n        setTimeout(() => {\n          actions.setSubmitting(false);\n        }, 2000);\n      },\n      validationSchema: userSchema,\n      children: props => !props.isSubmitting ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: props.handleSubmit,\n        className: s.form,\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          type: \"email\",\n          placeholder: \"Enter email\",\n          onChange: props.handleChange,\n          name: \"email\",\n          value: props.values.email,\n          className: s.text_field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), props.errors.email && props.touched.email ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: s.field_text,\n          children: props.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(Field, {\n          type: \"password\",\n          onChange: props.handleChange,\n          name: \"password\",\n          value: props.values.password,\n          placeholder: \"Password\",\n          className: s.text_field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), props.errors.password && props.touched.password ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: s.field_text,\n          children: props.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(Field, {\n          name: \"name\",\n          onChange: props.handleChange,\n          value: props.values.name,\n          type: \"text\",\n          placeholder: \"Name\",\n          className: s.text_field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), props.errors.name && props.touched.name ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: s.field_text,\n          children: props.errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !props.dirty && props.isSubmitting,\n          className: `${s.button} ${s.submit_button}`,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !props.dirty,\n          onClick: props.handleReset,\n          type: \"button\",\n          className: s.button,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.overlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormValidation, \"XWwdWJ2yLtUPeQmX3EfEt6Ys2HA=\");\n\n_c = FormValidation;\nexport default FormValidation;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormValidation\");","map":{"version":3,"sources":["/home/probook/sample-Project-1/src/components/formValidation/index.js"],"names":["React","useState","Fragment","Formik","Field","yup","s","initialState","email","name","password","userSchema","object","shape","string","required","max","min","FormValidation","props","user","setUser","intialState","output","JSON","stringify","values","actions","setSubmitting","setTimeout","isSubmitting","handleSubmit","form","handleChange","text_field","errors","touched","field_text","dirty","button","submit_button","handleReset","overlay"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport { Formik, Field } from \"formik\";\nimport * as yup from \"yup\";\nimport s from \"./index.css\";\n\nconst initialState = {\n  email: \"\",\n  name: \"\",\n  password: \"\",\n};\n\nconst userSchema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().email().required(),\n  password: yup.string().required().max(13).min(8),\n});\n\nconst FormValidation = (props) => {\n  const [user, setUser] = useState(intialState);\n  return (\n    <Fragment>\n      <span className={`${s.output}`}>{JSON.stringify(user, null, 2)}</span>\n      <Formik\n        initialValues={user}\n        onSubmit={(values, actions) => {\n          actions.setSubmitting(true);\n          setUser(values);\n          setTimeout(() => {\n            actions.setSubmitting(false);\n          }, 2000);\n        }}\n        validationSchema={userSchema}\n      >\n        {(props) =>\n          !props.isSubmitting ? (\n            <form onSubmit={props.handleSubmit} className={s.form}>\n              <Field\n                type=\"email\"\n                placeholder=\"Enter email\"\n                onChange={props.handleChange}\n                name=\"email\"\n                value={props.values.email}\n                className={s.text_field}\n              />\n\n              {props.errors.email && props.touched.email ? (\n                <span className={s.field_text}>{props.errors.email}</span>\n              ) : (\n                \"\"\n              )}\n\n              <Field\n                type=\"password\"\n                onChange={props.handleChange}\n                name=\"password\"\n                value={props.values.password}\n                placeholder=\"Password\"\n                className={s.text_field}\n              />\n\n              {props.errors.password && props.touched.password ? (\n                <span className={s.field_text}>{props.errors.password}</span>\n              ) : (\n                \"\"\n              )}\n              <Field\n                name=\"name\"\n                onChange={props.handleChange}\n                value={props.values.name}\n                type=\"text\"\n                placeholder=\"Name\"\n                className={s.text_field}\n              />\n              {props.errors.name && props.touched.name ? (\n                <span className={s.field_text}>{props.errors.name}</span>\n              ) : (\n                \"\"\n              )}\n              <button\n                type=\"submit\"\n                disabled={!props.dirty && props.isSubmitting}\n                className={`${s.button} ${s.submit_button}`}\n              >\n                Submit\n              </button>\n              <button\n                disabled={!props.dirty}\n                onClick={props.handleReset}\n                type=\"button\"\n                className={s.button}\n              >\n                Reset\n              </button>\n            </form>\n          ) : (\n            <div className={s.overlay} />\n          )\n        }\n      </Formik>\n    </Fragment>\n  );\n};\n\nexport default FormValidation;\n"]},"metadata":{},"sourceType":"module"}