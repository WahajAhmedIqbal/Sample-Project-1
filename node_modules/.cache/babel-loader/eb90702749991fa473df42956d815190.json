{"ast":null,"code":"var _jsxFileName = \"/home/probook/sample-Project-1/src/components/formValidation/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \".\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  Name: yup.string().required(\"First Name should be required please\"),\n  // lastName: yup.string().required(),\n  email: yup.string().email().required(),\n  // age: yup.number().positive().integer().required(),\n  password: yup.string().min(4).max(15).required() // confirmPassword: yup.string().oneOf([yup.ref(\"password\"), null]),\n\n});\n\nfunction FormValidation() {\n  _s();\n\n  var _errors$Name, _errors$email, _errors$password;\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const submitForm = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(submitForm),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Name\",\n          ref: register,\n          placeholder: \"First Name...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", (_errors$Name = errors.Name) === null || _errors$Name === void 0 ? void 0 : _errors$Name.message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"Email...\",\n          ref: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password...\",\n          ref: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          id: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormValidation, \"iyH731LTjAbxnbpM16EGorBPneQ=\", false, function () {\n  return [useForm];\n});\n\n_c = FormValidation;\nexport default FormValidation;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormValidation\");","map":{"version":3,"sources":["/home/probook/sample-Project-1/src/components/formValidation/index.js"],"names":["React","useForm","yupResolver","yup","schema","object","shape","Name","string","required","email","password","min","max","FormValidation","register","handleSubmit","errors","resolver","submitForm","data","console","log","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,GAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,MAAM,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,EAAAA,IAAI,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,sCAAtB,CAD0B;AAEhC;AACAC,EAAAA,KAAK,EAAEP,GAAG,CAACK,MAAJ,GAAaE,KAAb,GAAqBD,QAArB,EAHyB;AAIhC;AACAE,EAAAA,QAAQ,EAAER,GAAG,CAACK,MAAJ,GAAaI,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BJ,QAA5B,EALsB,CAMhC;;AANgC,CAAnB,CAAf;;AASA,SAASK,cAAT,GAA0B;AAAA;;AAAA;;AACxB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqChB,OAAO,CAAC;AACjDiB,IAAAA,QAAQ,EAAEhB,WAAW,CAACE,MAAD;AAD4B,GAAD,CAAlD;;AAIA,QAAMe,UAAU,GAAIC,IAAD,IAAU;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEJ,YAAY,CAACG,UAAD,CAA5B;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,GAAG,EAAEJ,QAHP;AAIE,UAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAA,0CAAKE,MAAM,CAACV,IAAZ,iDAAK,aAAagB,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAeE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,WAAW,EAAC,UAHd;AAIE,UAAA,GAAG,EAAER;AAJP;AAAA;AAAA;AAAA;AAAA,gBAfF,eAqBE;AAAA,2CAAKE,MAAM,CAACP,KAAZ,kDAAK,cAAca,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBF,eAwBE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,WAAW,EAAC,aAHd;AAIE,UAAA,GAAG,EAAER;AAJP;AAAA;AAAA;AAAA;AAAA,gBAxBF,eA8BE;AAAA,8CAAKE,MAAM,CAACN,QAAZ,qDAAK,iBAAiBY,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BF,eAsCE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,EAAE,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAtCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD;;GAvDQT,c;UACoCb,O;;;KADpCa,c;AAyDT,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport \".\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nconst schema = yup.object().shape({\n  Name: yup.string().required(\"First Name should be required please\"),\n  // lastName: yup.string().required(),\n  email: yup.string().email().required(),\n  // age: yup.number().positive().integer().required(),\n  password: yup.string().min(4).max(15).required(),\n  // confirmPassword: yup.string().oneOf([yup.ref(\"password\"), null]),\n});\n\nfunction FormValidation() {\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const submitForm = (data) => {\n    console.log(data);\n  };\n  return (\n    <div className=\"Form\">\n      <div className=\"title\">Sign Up</div>\n      <div className=\"inputs\">\n        <form onSubmit={handleSubmit(submitForm)}>\n          <input\n            type=\"text\"\n            name=\"Name\"\n            ref={register}\n            placeholder=\"First Name...\"\n          />\n          <p> {errors.Name?.message} </p>\n          {/* <input\n            type=\"text\"\n            name=\"lastName\"\n            placeholder=\"Last Name...\"\n            ref={register}\n          />\n          <p> {errors.lastName?.message} </p> */}\n          <input\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"Email...\"\n            ref={register}\n          />\n          <p> {errors.email?.message} </p>\n          {/* <input type=\"text\" name=\"age\" placeholder=\"Age...\" ref={register} /> */}\n          {/* <p> {errors.age?.message} </p> */}\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password...\"\n            ref={register}\n          />\n          <p> {errors.password?.message} </p>\n          {/* <input\n            type=\"password\"\n            name=\"confirmPassword\"\n            placeholder=\"Confirm Password...\"\n            ref={register}\n          /> */}\n          {/* <p> {errors.confirmPassword && \"Passwords Should Match!\"} </p> */}\n          <input type=\"submit\" id=\"submit\" />\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default FormValidation;\n"]},"metadata":{},"sourceType":"module"}